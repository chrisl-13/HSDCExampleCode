import { FiberNode } from "./mocked-types";
interface TTraverseConfig {
    order?: Array<"self" | "child" | "sibling">;
    skipSiblingForStartNode?: boolean;
    skipSelfForStartNode?: boolean;
}
declare function traverseGenerator(node: FiberNode, { order, skipSiblingForStartNode, skipSelfForStartNode }?: TTraverseConfig): IterableIterator<FiberNode>;
declare function traverse(node: FiberNode, fn: (node: FiberNode) => any, traverseConfig?: TTraverseConfig): void;
export { traverse, traverseGenerator, TTraverseConfig };
