import * as React from "react";
import { FiberNode, FiberNodeisHTMLLike, FiberNodeForFunctionComponent, FiberNodeForComponentClass, FiberNodeDOMContainer } from "./mocked-types";
declare function isNodeHtmlLike(node: FiberNode): node is FiberNodeisHTMLLike;
declare function isNodeNotHtmlLike(node: FiberNode): node is Exclude<FiberNode, FiberNodeisHTMLLike>;
declare function isNodeFunctionComponent(node: FiberNode): node is FiberNodeForFunctionComponent;
declare function isNodeComponentClass(node: FiberNode): node is FiberNodeForComponentClass;
declare function isConstructorHtmlLike(ctr: React.ElementType | null): ctr is Exclude<React.ElementType | null, React.ComponentType>;
declare function isConstructorComponentClass(ctr: React.ElementType | null): ctr is React.ComponentClass;
declare function isConstructorFunctionComponent(ctr: React.ElementType | null): ctr is React.FunctionComponent;
declare function doesElementContainRootFiberNode(element: Element): element is FiberNodeDOMContainer;
declare function getRootFiberNodeFromDOM(startElement?: Element): FiberNode | null;
export { isNodeHtmlLike, isNodeNotHtmlLike, isNodeFunctionComponent, isNodeComponentClass, isConstructorHtmlLike, isConstructorComponentClass, isConstructorFunctionComponent, doesElementContainRootFiberNode, getRootFiberNodeFromDOM };
