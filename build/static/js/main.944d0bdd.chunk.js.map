{"version":3,"sources":["fakeApi.js","index.js"],"names":["fetchUser","id","fetch","then","response","json","data","name","fetchPosts","starships","ProfilePage","useState","user","setUser","character","setCharacter","useEffect","u","ProfileTimeline","props","posts","setPosts","p","length","map","post","idx","rootElement","document","getElementById","render","fiberRoot","_reactRootContainer","_internalRoot","console","log","hostRootFiberNode","current","profilePageRoot","child"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,QAASA,UAAT,CAAmBC,EAAnB,CAAuB,CAC5B,MAAOC,MAAK,wCAAiCD,EAAjC,MAAL,CACJE,IADI,CACCC,QAAQ,EAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECG,IAAI,EAAI,MACJC,KADI,CACKD,IADL,CACJC,IADI,CAEZ,MAAOA,KAAP,CACD,CALI,CAAP,CAMD,CAEM,QAASC,WAAT,CAAoBP,EAApB,CAAwB,CAC7B,MAAOC,MAAK,wCAAiCD,EAAjC,MAAL,CACJE,IADI,CACCC,QAAQ,EAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECG,IAAI,EAAI,MACJG,UADI,CACUH,IADV,CACJG,SADI,CAEZ,MAAOA,UAAP,CACD,CALI,CAAP,CAMD,C;;ACTD,QAASC,YAAT,EAAuB,iBACGC,yBAAQ,CAAC,IAAD,CADX,kEACdC,IADc,eACRC,OADQ,gCAEaF,yBAAQ,CAAC,CAAD,CAFrB,mEAEdG,SAFc,eAEHC,YAFG,eAIrBC,0BAAS,CAAC,IAAM,CACdhB,SAAS,CAACc,SAAD,CAAT,CAAqBX,IAArB,CAA0Bc,CAAC,EAAIJ,OAAO,CAACI,CAAD,CAAtC,EACD,CAFQ,CAEN,CAACH,SAAD,CAFM,CAAT,CAIA,GAAIF,IAAI,GAAK,IAAb,CAAmB,CACjB,mBAAO,4DAAP,CACD,CACD,mBACE,yEACE,wCAAKA,IAAL,CADF,cAEE,8BAAC,eAAD,EAAiB,IAAI,CAAEA,IAAvB,CAA6B,SAAS,CAAEE,SAAxC,EAFF,cAGE,wCAAQ,OAAO,CAAE,IAAMC,YAAY,CAACD,SAAS,CAAG,CAAb,CAAnC,qBAHF,CADF,CAOD,CAED,QAASI,gBAAT,CAAyBC,KAAzB,CAAgC,kBACJR,yBAAQ,CAAC,IAAD,CADJ,mEACvBS,KADuB,eAChBC,QADgB,eAG9BL,0BAAS,CAAC,IAAM,CACdR,UAAU,CAACW,KAAK,CAACL,SAAP,CAAV,CAA4BX,IAA5B,CAAiCmB,CAAC,EAAID,QAAQ,CAACC,CAAD,CAA9C,EACD,CAFQ,CAEN,CAACH,KAAK,CAACL,SAAP,CAFM,CAAT,CAIA,GAAIM,KAAK,GAAK,IAAd,CAAoB,CAClB,mBAAO,2DAAP,CACD,CACD,mBACE,4DACGA,KAAK,CAACG,MAAN,GAAiB,CAAjB,cAAqB,wCAAKJ,KAAK,CAACP,IAAX,sBAAmCQ,KAAK,CAACG,MAAzC,aAArB,cAAsF,wCAAKJ,KAAK,CAACP,IAAX,sBAAmCQ,KAAK,CAACG,MAAzC,cADzF,cAEE,wCACGH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,CAAOC,GAAP,gBACT,oCAAI,GAAG,CAAEA,GAAT,EAAeD,IAAf,CADD,CADH,CAFF,CADF,CAUD,CAGD,KAAME,YAAW,CAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CACAC,2BAAM,cAAC,8BAAC,WAAD,MAAD,CAAkBH,WAAlB,CAAN,CAEA,GAAII,UAAS,CAAGJ,WAAW,CAACK,mBAAZ,CAAgCC,aAAhD,CACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBJ,SAAzB,EACA,GAAIK,kBAAiB,CAAGL,SAAS,CAACM,OAAlC,CACAH,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCC,iBAAhC,EAEA;AACA,GAAIE,gBAAe,CAAGF,iBAAiB,CAACG,KAAxC,CACAL,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BG,eAA/B,E","file":"static/js/main.944d0bdd.chunk.js","sourcesContent":["export function fetchUser(id) {\n  return fetch(`https://swapi.dev/api/people/${id}/`)\n    .then(response => response.json())\n    .then(data => {\n      const { name } = data;\n      return name;\n    })\n}\n\nexport function fetchPosts(id) {\n  return fetch(`https://swapi.dev/api/people/${id}/`)\n    .then(response => response.json())\n    .then(data => {\n      const { starships } = data;\n      return starships;\n    })\n}\n","import React, {\n  useState,\n  useEffect\n} from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport { fetchUser, fetchPosts } from \"./fakeApi\";\n\nfunction ProfilePage() {\n  const [user, setUser] = useState(null);\n  const [character, setCharacter] = useState(1);\n\n  useEffect(() => {\n    fetchUser(character).then(u => setUser(u));\n  }, [character]);\n\n  if (user === null) {\n    return <p>Loading profile...</p>;\n  }\n  return (\n    <>\n      <h1>{user}</h1>\n      <ProfileTimeline user={user} character={character} />\n      <button onClick={() => setCharacter(character + 1)}>Change Character</button>\n    </>\n  );\n}\n\nfunction ProfileTimeline(props) {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    fetchPosts(props.character).then(p => setPosts(p));\n  }, [props.character]);\n\n  if (posts === null) {\n    return <h2>Loading posts...</h2>;\n  }\n  return (\n    <>\n      {posts.length === 1 ? <h5>{props.user} has been seen on {posts.length} starship</h5> : <h5>{props.user} has been seen on {posts.length} starships</h5>}\n      <ul>\n        {posts.map((post, idx) => (\n          <li key={idx}>{post}</li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nrender(<ProfilePage />, rootElement);\n\nlet fiberRoot = rootElement._reactRootContainer._internalRoot;\nconsole.log('fiberRoot', fiberRoot);\nlet hostRootFiberNode = fiberRoot.current;\nconsole.log('initial hostRoot', hostRootFiberNode);\n\n//first child of hostRoot is ProfilePage \nlet profilePageRoot = hostRootFiberNode.child;\nconsole.log('profilePageRoot', profilePageRoot);\n\n\n\n\n\n"],"sourceRoot":""}